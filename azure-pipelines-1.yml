# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'myregistrydemo1'
  imageRepository: 'helloworld'
  containerRegistry: 'myregistrydemo1.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Pipeline.Workspace)/s/manifests'
        artifact: 'manifests'
        publishLocation: 'pipeline'
- stage: Deploy
  displayName: Deploy to dev
  dependsOn: Build
  variables:
    acrsecret: k8examplesacrauth
  jobs:
    - job: Deploy
      displayName: Deploy to AKS
      pool:
        vmImage: $(vmImageName)
      steps:
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'manifests'
          targetPath: '$(Pipeline.Workspace)/manifests'
      - task: KubernetesManifest@0
        inputs:
          action: 'createSecret'
          kubernetesServiceConnection: 'kubernetesdemo'
          namespace: 'default'
          secretType: 'dockerRegistry'
          secretName: '$(acrsecret)'
          dockerRegistryEndpoint: 'myregistrydemo1'

      - task: KubernetesManifest@0
        inputs:
          action: 'deploy'
          kubernetesServiceConnection: 'kubernetesdemo'
          namespace: 'default'
          manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
